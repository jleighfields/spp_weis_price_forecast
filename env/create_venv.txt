## https://docs.posit.co/ide/server-pro/user/posit-workbench/guide/python.html#virtual-environments
## /opt/python/3.11.3/bin/python3 -m venv ./venv
# conda create --name py_3_11 python=3.11
conda activate py_3_11
python -m venv ./venv
source venv/bin/activate
python -V # check python version

## install packages
pip install --upgrade pip

pip install torch torchvision torchaudio

pip install scikit-learn darts neuralforecast \
pandas pyarrow seaborn plotly \
python-dotenv xgboost streamlit shiny \
jupyterlab jupyterlab-git ipywidgets \
pytest pylint rsconnect-python boto3

pip install polars duckdb "ibis-framework[duckdb]"
pip install mlflow
pip install optuna-integration[pytorch_lightning]
pip install lightning
pip install optuna-dashboard
pip install jupyterlab jupyterlab-optuna
pip install tensorboard
pip install papermill
pip install lightning-sdk

# do a pip freeze, it saves requirements that will cause deploying apps to fail
# since the systems are so different from training and hosting
# pip freeze > requirements.txt

jupyter kernelspec uninstall spp_weis -y
ipython kernel install --name=spp_weis --user

# restart gpu
alias gpu_reset="sudo rmmod nvidia_uvm ; sudo modprobe nvidia_uvm"
watch -n 1 nvidia-smi

# start tensorboard
tensorboard --reload_interval 3 --reload_multifile True --logdir=model_checkpoints/ts_mixer_model
tensorboard --reload_interval 3 --reload_multifile True --logdir=model_checkpoints/tide_model
tensorboard --reload_interval 3 --reload_multifile True --logdir=model_checkpoints/tft_model
